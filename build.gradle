def ggRepo = System.getenv('GG_REPO')

allprojects {
  buildscript {
    repositories {
      mavenLocal()
      if (ggRepo?.trim()) maven { url ggRepo.trim() }
      mavenCentral()
    }

    dependencies {
      classpath "kz.greetgo.plugins:greetgo.gradle.plugins:0.0.5"
    }
  }

  apply plugin: 'java'
  apply plugin: 'maven'
  apply plugin: 'idea'

  version = '0.0.5'

  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  group = "kz.greetgo.type_script"
}

subprojects {

  repositories {
    mavenLocal()
    if (ggRepo?.trim()) maven { url ggRepo.trim() }
    jcenter()
  }

  dependencies {
    //ext.guavaVersion = '23.0'
    ext.greetgoUtil = '2.0.0'

    testCompile 'org.testng:testng:6.5.1'
    compile 'org.easytesting:fest-assert-core:2.0M10'
  }

  test.useTestNG()

  idea.module.inheritOutputDirs = false
  idea.module.outputDir = file("$buildDir/classes/main/")
  idea.module.testOutputDir = file("$buildDir/classes/test/")

  [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
  [compileJava, compileTestJava]*.options*.debugOptions*.debugLevel = "source,lines,vars"

  sourceSets.main.java.srcDirs = ["src"]
  sourceSets.test.java.srcDirs = ["test_src"]
  sourceSets.main.resources.srcDirs = ["src_resources"]
  sourceSets.test.resources.srcDirs = ["test_resources"]

  sourceSets.main.resources {
    srcDirs += sourceSets.main.java.srcDirs
    exclude '**/*.java'
  }
  sourceSets.test.resources {
    srcDirs += sourceSets.test.java.srcDirs
    exclude '**/*.java'
  }

  jar {
    manifest {
      attributes 'Implementation-Title': project.name
      attributes 'Implementation-Version': version
      attributes 'Implementation-Vendor': "greetgo!"
      attributes 'Created-By': System.getProperty("user.name")
      attributes 'Created-At': new Date().format("yyyy-MM-dd/HH:mm:ss")
    }
  }
}
